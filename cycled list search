public class Solution {
	// DO NOT MODIFY THE LIST
	public int search(final List<Integer> a, int b) {
	    
	    int p = findpivot(a);
	    int r1 = find(a,b,0,p-1);
	    int r2 = find(a,b,p,a.size()-1);
	    
	    return r1==-1?r2:r1;
	}
	
	int findpivot(List<Integer> a){
	    int l=0;
	    int r =a.size()-1;
	    while(l<r){
	        int m = l+(r-l)/2;
	        if(a.get(m)<a.get(r)){
	            r = m;
	        }else{
	            l=m+1;
	        }
	    }
	    return l;
	}
	
	int find(List<Integer> a, int b, int l, int r){
	    int res =-1;
	    while(l<=r){
	        int m = l+(r-l)/2;
	        if(a.get(m)==b){
	            return m;
	        }else if(a.get(m)<b){
	            l=m+1;
	        }else{
	            r= m-1;
	        }
	    }
	    return res;
	}
}
